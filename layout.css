/* @override http://localhost/ddk/sites/default/themes/danablu/layout.css?u */

/* $Id$ */

/**
 * LAYOUT STYLES
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * It is a 12-column grid layout based on 960.gs, using the dimensions
 * listed at http://960.gs/demo.html
 *
 * This layout is based on the Zen Columns layout method.
 *   http://drupal.org/node/201428
 *
 * Only CSS that affects the layout (positioning) of major elements should be
 * listed here.  Such as:
 *   display, position, float, clear, width, height, min-width, min-height
 *   margin, border, padding, overflow
 */


/** body **/
  body
  {
  }

  #page,
  #closure-blocks
  {
    /*
     * If you want to make the page a fixed width and centered in the viewport,
     * this is the standards-compliant way to do that. See also the ie.css file
     * for the necessary IE5 hack to center a div.
     */
    margin-left: auto;
    margin-right: auto;
    width: 980px; /* 960 + 20px for the shadow */
  }

  #page-inner
  {
	padding-left: 10px;
	padding-right: 10px;
  }

  #navigation-top,
  #navigation
  {
    position: absolute; /* Take the named anchors out of the doc flow    */
    left: -10000px;     /* and prevent any anchor styles from appearing. */
  }

  #skip-to-nav
  {
    float: right;
    margin: 0 !important;
    font-size: 0.8em;
  }

  #skip-to-nav a, #skip-to-nav a:hover, #skip-to-nav a:visited
  {
    position: absolute;
    left: 0;
    top: -500px;
    width: 1px;
    height: 1px;
    overflow: hidden;
  }

  #skip-to-nav a:active, #skip-to-nav a:focus
  {
    position: static;
    width: auto;
    height: auto;
  }

/** header **/
  #header
  {
    height: 75px;
  }

  #header-inner
  {
  }

  #logo-title
  {
	width: 620px;
  }

  #logo
  {
    float: left;
  }

  #site-name
  {
  }

  #site-slogan
  {
  }

  #header-blocks
  {
    width: 300px;
    float: right;
    clear: right;
    margin-top: -60px;
  }

/** main (container for everything else) **/
  #main
  {
    position: relative;
  }

  #main-inner
  {
  }

/** content **/
  #content,
  .no-sidebars #content
  {
    float: left;
    width: 940px;
    margin-left: 10px;
    margin-right: -960px; /* Negative value of #content's width + left margin. */
    padding: 0; /* DO NOT CHANGE. Add padding or margin to #content-inner. */
  }

  .sidebar-left #content
  {
    width: 700px;
    margin-left: 240px; /* The width of #sidebar-left. */
    margin-right: -940px; /* Negative value of #content's width + left margin. */
  }

  .sidebar-right #content
  {
    width: 700px;
    margin-left: 10px;
    margin-right: -710px; /* Negative value of #content's width + left margin. */
  }

  .two-sidebars #content
  {
    width: 480px;
    margin-left: 240px; /* The width of #sidebar-left */
    margin-right: -740px; /* Negative value of #content's width + left margin. */
  }

  #content-inner
  {
    margin: 0;
    padding: 10px;
  }

/** navbar **/
  #navbar
  {
    float: left;
    width: 100%;
    margin-left: 0;
    margin-right: -100%; /* Negative value of #navbar's width + left margin. */
    padding: 0; /* DO NOT CHANGE. Add padding or margin to #navbar-inner. */
    height: 70px;
  }

  .with-navbar #content,
  .with-navbar #sidebar-left,
  .with-navbar #sidebar-right
  {
    margin-top: 70px; /* Set this to the same value as the navbar height above. */
  }

  #navbar-inner
  {
  }

  #search-box
  {
    width: 220px;
    float: right;
  }

  #primary
  {
  }

  #secondary
  {
  }

  #navbar ul /* Primary and secondary links */
  {
    margin: 0;
    padding: 0;
    text-align: left;
  }

  #navbar li /* A simple method to get navbar links to appear in one line. */
  {
    float: left;
    padding: 0 10px 0 0;
  }

  /* There are many methods to get navbar links to appear in one line.
   * Here's an alternate method: */
  /*
  #navbar li
  {
    display: inline;
    padding: 0 10px 0 0;
  }
  */

/** sidebar-left **/
  #sidebar-left
  {
    float: left;
    width: 220px;
    margin-left: 10px;
    margin-right: -230px; /* Negative value of #sidebar-left's width + left margin. */
    padding: 0; /* DO NOT CHANGE. Add padding or margin to #sidebar-left-inner. */
  }

  #sidebar-left-inner
  {
	margin: 0;
    padding: 10px 20px 10px 10px;
  }

/** sidebar-right **/
  #sidebar-right
  {
    float: left;
    width: 220px;
    margin-left: 730px; /* Width of content + sidebar-left. */
    margin-right: -950px; /* Negative value of #sidebar-right's width + left margin. */
    padding: 0; /* DO NOT CHANGE. Add padding or margin to #sidebar-right-inner. */
  }

  #sidebar-right-inner
  {
    margin: 0;
    padding: 10px 10px 10px 20px;
  }

/** footer **/
  #footer
  {
  }

  #footer-inner
  {
	padding: 10px;
  }

/** closure **/
  #closure-blocks /* See also the #page declaration above that this div shares. */
  {
  }

/** Prevent overflowing content **/
  #header,
  #content,
  #navbar,
  #sidebar-left,
  #sidebar-right,
  #footer,
  #closure-blocks
  {
    overflow: visible;
    word-wrap: break-word; /* A very nice CSS3 property */
  }

  #navbar
  {
    overflow: hidden; /* May need to be removed if using a dynamic drop-down menu */
  }

  /* If a div.clear-block doesn't have any content after it and its bottom edge
     touches the bottom of the viewport, Firefox and Safari will mistakenly
     place several pixels worth of space between the bottom of the div and the
     bottom of the viewport. Uncomment this CSS property to fix this.
     Note: with some over-large content, this property might cause scrollbars
     to appear on the #page div.
  */
  /*
  #page
  {
    overflow-y: hidden;
  }
  */
